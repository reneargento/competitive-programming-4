4.3.4.1

Compute the MST using Kruskal's algorithm.
Set WD (weight difference) as infinite.
Set Enew = -1 and Eold = -1. Enew is the new edge to be added, Eold is the edge to be removed.

Root the MST in one vertex and precompute all the vertices LCAs (lowest common ancestors).
Also precompute the maximum weight edge for each vertex on the path to their ancestors. This can be done using Binary
Lifting for LCA.

For every edge e that is not in the MST:
1- Add the edge to the tree, creating a cycle.
2- Find k, the maximum weight edge in the cycle, such that k is different from e.
3- Remove k.
4- Compute the change in the tree weight D = weight(e) - weight(k)
5- If D is less than WD, then set WD = D and Enew = e and Eold = k.

The second best MST is the one that results from replacing Eold with Enew.
The complexity of this approach is O(E lg V).

Based on:
http://web.mit.edu/6.263/www/quiz1-f05-sol.pdf
https://cp-algorithms.com/graph/second_best_mst.html#modeling-into-a-lowest-common-ancestor-lca-problem